= form_tag search_catalog_path, method: :get, class: 'search-query-form', role: 'search' do
  = render_hash_as_hidden_fields(search_state.params_for_search.except(:q, :search_field, :qt, :page, :utf8, :exhibit_id))
  - if search_fields.length > 1
    %label.sr-only{for: "search_field"}= t('blacklight.search.form.search_field.label')
  .input-group
    - if search_fields.length > 1
      = select_tag(:search_field,                                    |
        options_for_select(search_fields, h(params[:search_field])), |
        title: t('blacklight.search.form.search_field.title'),       |
        id: "search_field",                                          |
        class: "custom-select search-field")                         |
    - elsif search_fields.length == 1
      = hidden_field_tag :search_field, search_fields.first.last
    %label.sr-only{for: "q"}= t('blacklight.search.form.search.label')
    = text_field_tag :q, params[:q], placeholder: t('blacklight.search.form.search.placeholder'), class: "search-q q form-control", id: "q", autofocus: presenter.autofocus?, data: { autocomplete_enabled: presenter.autocomplete_enabled?, autocomplete_path: search_action_path(action: :suggest) }
    %span.input-group-append
      %button#search.btn.btn-primary.search-btn{type: "submit"}
        %span.submit-search-text= t('blacklight.search.form.submit')
        = blacklight_icon :search

    %nav.navbar.navbar-default.sub-nav.col-sm-6
      .container-fluid
        #main_navigation.w-100
          .row.d-flex.justify-content-around
            = link_to "Search", page_path("catalog")
            = link_to "Map", page_path("map")
            = link_to "Essays & Exhibits", "/"
            = link_to "Collections", search_catalog_path( f: {"is_collection_id_i" => ['is_collection_id_i']} )
            = link_to "About", "/spotlight/about"
            = link_to "Data", "/spotlight/data"
